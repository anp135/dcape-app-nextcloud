services:

  front:
    image: ${NGINX_IMAGE}:${NGINX_IMAGE_VER}
    depends_on:
      - app
    restart: always
    labels:
      - traefik.enable=true
      - dcape.traefik.tag=${DCAPE_TAG}
      - traefik.http.routers.${APP_TAG}-front.rule=Host(`${APP_SITE:?Must be set}`)
      - traefik.http.routers.${APP_TAG}-front.tls=${USE_TLS}
      - traefik.http.routers.${APP_TAG}-front.tls.certresolver=letsEncrypt
      # hsts middleware defined in DCAPE/apps/traefik/docker-compose.inc.yml
      - traefik.http.routers.${APP_TAG}-front.middlewares=hsts
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${APP_ROOT}/html:/var/www/html:ro
      - ${APP_ROOT}/data:${DATA_DIR}:ro
      - ${APP_ROOT}/etc/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

  app:
    image: ${IMAGE}:${IMAGE_VER}
    hostname: ${APP_TAG}-app
    restart: always
    depends_on:
      - cache
    labels:
      - traefik.enable=false
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${APP_ROOT}/html:/var/www/html
      - ${APP_ROOT}/data:${DATA_DIR}
      - ${APP_ROOT}/config:/var/www/html/config
      - ${APP_ROOT}/etc/php-fpm.d/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf:ro
    environment:
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_HOST=db
      - NEXTCLOUD_ADMIN_USER=${USER_NAME}
      - NEXTCLOUD_ADMIN_PASSWORD=${USER_PASS}
      - NEXTCLOUD_TRUSTED_DOMAINS=${APP_SITE}
      - NEXTCLOUD_DATA_DIR=${DATA_DIR}
      - OVERWRITEPROTOCOL=https
      - TRUSTED_PROXIES=${DCAPE_SUBNET}
      - REDIS_HOST=${APP_TAG}-cache
      - REDIS_HOST_PASSWORD=${REDIS_PASS}

  cache:
    image: ${REDIS_IMAGE}:${REDIS_IMAGE_VER}
    hostname: ${APP_TAG}-cache
    restart: always
    command: redis-server --requirepass ${REDIS_PASS}
    sysctls:
      net.core.somaxconn: 511
    labels:
      - traefik.enable=false
    volumes:
      - ${APP_ROOT}/redis:/var/lib/redis

  rabbitmq:
    image: rabbitmq
    restart: always
    expose:
      - "5672"
    labels:
      - traefik.enable=false
    volumes:
      - ${APP_ROOT}/rabbitmq:/var/lib/rabbitmq

  onlyoffice:
    image: ${OO_IMAGE}:${OO_IMAGE_VER}
    restart: always
    depends_on:
      - rabbitmq
    stdin_open: true
    stop_grace_period: 60s
    environment:
      - DB_TYPE=postgres
      - DB_NAME=${OO_PGDATABASE}
      - DB_USER=${OO_PGUSER}
      - DB_PWD=${OO_PGPASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - AMQP_TYPE=rabbitmq
      - AMQP_URI=amqp://guest:guest@rabbitmq
      - REDIS_SERVER_HOST=${APP_TAG}-cache
      - JWT_ENABLED=true
      - JWT_SECRET=${OO_JWT_SECRET}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${APP_ROOT}/oo-data:/var/www/onlyoffice/Data
      - ${APP_ROOT}/oo-logs:/var/log/onlyoffice
    labels:
      traefik.enable: true
      dcape.traefik.tag: ${DCAPE_TAG}
      traefik.http.routers.${APP_TAG}-oo.rule: Host(`${OO_APP_SITE}`)
      traefik.http.routers.${APP_TAG}-oo.middlewares: hsts, oo-headers
      traefik.http.routers.${APP_TAG}-oo.tls: ${USE_TLS}

      traefik.http.middlewares.oo-headers.headers.customrequestheaders.X-Forwarded-Proto: https
      traefik.http.middlewares.oo-headers.headers.accessControlAllowOriginList: '*'

networks:
  default:
    external: true
    name: ${DCAPE_NET}
